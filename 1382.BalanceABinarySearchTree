/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public ArrayList<Integer> arr=new ArrayList<>();

    public TreeNode balanceBST(TreeNode root) {
        
        inorder(root);
        return helper(0, arr.size()-1); 
    }

    public void inorder(TreeNode root){

        if(root==null){
            return;
        }
        inorder(root.left);
        arr.add(root.val);
        inorder(root.right);
    }

    public TreeNode helper(int s, int e){

        // if(root==null){
        //     return null;
        // }

        if(s>e){
            return null;
        }
        int mid=(s+e)/2;

        TreeNode ans=new TreeNode(arr.get(mid));

        ans.left=helper(s, mid-1);
        ans.right=helper(mid+1, e);

        return ans;
    }
}