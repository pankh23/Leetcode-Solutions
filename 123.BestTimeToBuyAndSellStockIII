class Solution {
    public int maxProfit(int[] prices) {
        
        Integer[][][] dp=new Integer[prices.length][2][3];
        return helper(prices, 0, 1, 2, dp);
    }

    public int helper(int[] arr, int i, int buy, int total, Integer[][][] dp){

        if(i==arr.length || total==0){
            return 0;
        }
        
        if(dp[i][buy][total]!=null){
            return dp[i][buy][total];
        }
        if(buy==1){

            dp[i][buy][total]=Math.max(-arr[i]+helper(arr, i+1, 0, total, dp), helper(arr, i+1, 1, total, dp));
        }
        else{

            dp[i][buy][total]=Math.max(arr[i]+helper(arr, i+1, 1, total-1, dp), helper(arr, i+1, 0, total, dp));
        }
        
        return dp[i][buy][total];
    }
}