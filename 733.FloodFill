class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {

        int init=image[sr][sc];

        int[][] ans=image;
        int[] row={-1, 0, +1, 0};
        int[] col={0, +1, 0, -1};

        dfs(image, ans, sr, sc, init, row, col, color);

        return ans;
    }

    public void dfs(int[][] image, int[][] ans, int sr, int sc, int init, int[] row, int[] col, int color){

        int n=image.length;
        int m=image[0].length;

        ans[sr][sc]=color;

        for(int i=0;i<4;i++){

            int r=sr+row[i];
            int c=sc+col[i];

            if(r>=0 && r<n && c>=0 && c<m && image[r][c]==init && image[r][c]!=color){

                dfs(image, ans, r, c, init, row, col, color);
            }
        }
    }
}