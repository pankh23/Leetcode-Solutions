import java.util.Arrays;
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int[] sortedNums = Arrays.copyOf(nums, nums.length);
        
        Arrays.sort(sortedNums);

        int left = 0;
        int right = sortedNums.length - 1;
        while (left < right) {
            int sum = sortedNums[left] + sortedNums[right];
            // If the sum is equal to the target, return the indices of the two numbers
            if (sum == target) {
                // Find the indices of the two numbers in the original array
                int index1 = getIndex(nums, sortedNums[left],-1);
                int index2 = getIndex(nums, sortedNums[right],index1);
                return new int[]{Math.min(index1, index2), Math.max(index1, index2)};
            } else if (sum < target) {
                // If the sum is less than the target, move the left pointer to the right
                left++;
            } else {
                // If the sum is greater than the target, move the right pointer to the left
                right--;
            }
        }
        return new int[]{};
    }

    private int getIndex(int[] nums, int target,int excludeIndex) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == target && i != excludeIndex) {
                return i;
            }
        }
        return -1;
    }
}