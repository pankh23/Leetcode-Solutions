/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        
        if(head==null || k==0){
            return head;
        }

        ListNode curr=head;

        int len=1;

        while(curr.next!=null){
            len++;
            curr=curr.next;
        }

        if(k%len==0){
            return head;
        }

        k=k%len;

        curr.next=head;

        ListNode lastNode=helper(head, len-k);
        head=lastNode.next;
        lastNode.next=null;

        return head;
    }

    public ListNode helper(ListNode head, int k){

        int count=1;

        while(head!=null){

            if(count==k){
                return head;
            }

            count++;
            head=head.next;
        }
        return head;
    }
}