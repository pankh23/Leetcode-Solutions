class Solution {
    // Function to find the shortest path from a source node to all other nodes
    public int[] shortestPath(ArrayList<ArrayList<Integer>> adj, int src) {
        // code here
        
        int[] arr=new int[adj.size()];
        
        for(int i=0;i<arr.length;i++){
            
            arr[i]=Integer.MAX_VALUE;
        }
        
        boolean[] vis=new boolean[arr.length];
        
        arr[src]=0;
        vis[src]=true;
        
        Queue<Integer> q=new LinkedList<>();
        
        q.add(src);
        
        while(!q.isEmpty()){
            
            int first=q.poll();
            
            for(int i:adj.get(first)){
                
                // if(!vis[i]){
                    
                    if(arr[i]>arr[first]+1){
                    
                        arr[i]=arr[first]+1;
                        q.add(i);
                        vis[i]=true;
                    }
                // }
            }
        }
        
        for(int i=0;i<arr.length;i++){
            
            if(arr[i]==Integer.MAX_VALUE){
                arr[i]=-1;
            }
        }
        return arr;
    }
}
