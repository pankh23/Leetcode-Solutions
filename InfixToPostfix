class Solution {
    public static String infixToPostfix(String s) {
        // code here
        
        StringBuilder sb=new StringBuilder();
        Stack<Character> st=new Stack<>();
        
        
        for(int i=0;i<s.length();i++){
            
            if(s.charAt(i)=='('){
            
                st.push(s.charAt(i));
            }
        
            else if(s.charAt(i)==')'){
                
                while(!st.isEmpty() && st.peek()!='('){
                    sb.append(st.pop());
                }
                if(!st.isEmpty() && st.peek()=='('){
                    st.pop();
                }
            }
            
            else if(Character.isLetterOrDigit(s.charAt(i))){
                sb.append(s.charAt(i));
            }
            
            else{
                
                while(!st.isEmpty() && pre(s.charAt(i))<=pre(st.peek())){
                    sb.append(st.pop());
                }
                st.push(s.charAt(i));
            }
        }
        
        while(!st.isEmpty()){
            
            sb.append(st.pop());
        }
        
        return sb.toString();
        
    }
    public static int pre(char c){
            
            switch(c){
                
                case '+':
                case '-':return 1;
                case '*':
                case '/':return 2;
                case '^':return 3;
            }
            return -1;
        }
}