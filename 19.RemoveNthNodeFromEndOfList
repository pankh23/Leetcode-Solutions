class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {

        ListNode reversedHead = rev(head);

        if (n == 1) {
            reversedHead = reversedHead.next;
        } else {
            ListNode curr = reversedHead;
            for (int i = 1; i < n - 1 && curr.next != null; i++) {
                curr = curr.next;
            }

            if (curr.next != null) {
                curr.next = curr.next.next;
            }
        }

        return rev(reversedHead);
    }

    public ListNode rev(ListNode list) {
        ListNode curr = list;
        ListNode prev = null;

        while (curr != null) {
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }

        return prev; 
    }
}