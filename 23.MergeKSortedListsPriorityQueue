/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        
        PriorityQueue<ListNode> pr=new PriorityQueue<>((a, b) -> a.val - b.val);

        for(ListNode list:lists){

            if(list!=null){
                pr.add(list);
            }
            
        }

        ListNode dummy=new ListNode(-1);
        ListNode curr=dummy;

        while(!pr.isEmpty()){

            ListNode min=pr.poll();
            curr.next=min;
            curr=curr.next;

            if(min.next!=null){

                pr.add(min.next);
            }
        }

        return dummy.next;
    }
}