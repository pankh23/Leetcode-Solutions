/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        
        if(root==null){
            return 0;
        }
        
        TreeNode leftmost=null;
        Queue<TreeNode> q=new LinkedList<>();

        q.add(root);

        while(!q.isEmpty()){

            leftmost=q.poll();

            if(leftmost.right!=null){
                q.add(leftmost.right);
            }
            if(leftmost.left!=null){
                q.add(leftmost.left);
            }
        }
        return leftmost.val;
    }
}