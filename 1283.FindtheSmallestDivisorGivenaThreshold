class Solution {
    public int smallestDivisor(int[] nums, int threshold) {
        
        int max=Integer.MIN_VALUE;

        for(int i=0;i<nums.length;i++){

            max=Math.max(nums[i], max);
        }

        int l=1, r=max;
        int result=0;

        while(l<=r){

            int mid=(l+r)/2;

            int sum=helper(nums, mid);

            if(sum>threshold){

                l=mid+1;
            }

            else if(sum<=threshold){

                result=mid;
                r=mid-1;
            }
        }
        return result;
    }

    public static int helper(int arr[], int n){

        int sum=0;
        for(int i=0;i<arr.length;i++){

            sum += (int) (Math.ceil((double)arr[i]/n));
        }
          
        return sum;
    }
}