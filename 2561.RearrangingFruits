class Solution {
    public long minCost(int[] basket1, int[] basket2) {

        Map<Integer, Integer> map=new HashMap<>();
        int min=Integer.MAX_VALUE;

        for(int i:basket1){
            map.put(i, map.getOrDefault(i, 0)+1);
            min=Math.min(min, i);
        }
        for(int i:basket2){
            map.put(i, map.getOrDefault(i, 0)-1);
            min=Math.min(min, i);
        }

        List<Integer> list=new ArrayList<>();

        for(Map.Entry<Integer, Integer> e:map.entrySet()){

            if(e.getValue()%2!=0){
                return -1;
            }

            for(int i=0;i<Math.abs(e.getValue()/2);i++){
                list.add(e.getKey());
            }
        }
        Collections.sort(list);

        long ans=0;

        for(int i=0;i<list.size()/2;i++){

            ans+=Math.min(list.get(i), min*2);
        }
        return ans;
    }
}