/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        
        ArrayList<Integer> arr=new ArrayList<>();

        for(int i=0;i<lists.length;i++){

            ListNode temp=lists[i];

            while(temp!=null){

                arr.add(temp.val);
                temp=temp.next;
            }
        }

        Collections.sort(arr);
        ListNode head=convert(arr);
        return head;
    }

    public ListNode convert(ArrayList<Integer> arr){

        if(arr.isEmpty()){
            return null;
        }
        ListNode list=new ListNode(arr.get(0));
        ListNode curr=list;

        for(int i=1;i<arr.size();i++){

            curr.next=new ListNode(arr.get(i));
            curr=curr.next;
        }

        return list;
    }
}