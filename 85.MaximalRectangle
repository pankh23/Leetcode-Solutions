class Solution {
    public int maximalRectangle(char[][] matrix) {
        
        int n=matrix.length;
        int m=matrix[0].length;
        
        int[][] preSum=new int[n][m];
        
        for(int j=0;j<m;j++){

            int sum=0;

            for(int i=0;i<n;i++){
                
                if(matrix[i][j]=='0'){

                    sum=0;
                }
                sum=sum+(matrix[i][j]-'0');

                preSum[i][j]=sum;
            }
        }
        int max=0;

        for(int i=0;i<n;i++){

            max=Math.max(max, helper(preSum[i]));
        }
        return max;
    }

    public int helper(int[] height){

        int max=0;

        for(int i=0;i<height.length;i++){

            int h=height[i];

            int left=i;
            while(left-1>=0 && height[left-1]>=h){

                left--;
            }
            int right=i;

            while(right+1<height.length && height[right+1]>=h){

                right++;
            }

            int w=right-left+1;
            max=Math.max(max, h*w);
        }

        return max;
    }
}