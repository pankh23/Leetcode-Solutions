class Solution {
    public int lengthOfLIS(int[] nums) {

        Integer[][] dp=new Integer[nums.length][nums.length+1];

        return helper(nums, 0, -1, dp);
    }

    public int helper(int[] nums, int i, int prev, Integer[][] dp){

        if(i>=nums.length){
            return 0;
        }

        if(dp[i][prev+1]!=null){
            return dp[i][prev+1];
        }

        int notTake=helper(nums, i+1, prev, dp);

        int take=0;

        if(prev==-1 || nums[i]>nums[prev]){
            take=1+helper(nums, i+1, i, dp);
        }

        dp[i][prev+1]=Math.max(notTake, take);

        return dp[i][prev+1];
    }
}