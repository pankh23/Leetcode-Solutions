class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        // Code here
        
        int[] row={-1, 0, 1, 0};
        int[] col={0, -1, 0, 1};
        
        boolean[][] vis=new boolean[image.length][image[0].length];
        
        int ori=image[sr][sc];
        if(ori==newColor){
            return image;
        }
        
        dfs(image, vis, newColor, sr, sc, row, col, ori);
        
        return image;
    }
    
    public void dfs(int[][] image, boolean[][] vis, int color, int r, int c, int[]row, int[]col, int ori){
        
        image[r][c]=color;
        vis[r][c]=true;
        
        for(int i=0;i<4;i++){
            
            int m=row[i]+r;
            int n=col[i]+c;
            
            if(m>=0 && n>=0 && m<image.length && n<image[0].length && vis[m][n]==false && image[m][n]==ori){
                
                dfs(image, vis, color, m, n, row, col, ori);
                
            }
        }
    }
}