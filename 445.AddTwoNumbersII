/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        l1=rev(l1);
        l2=rev(l2);

        int sum=0, car=0;
        ListNode ans=null;

        while(l1!=null || l2!=null || car!=0){

            sum=0;

            if(l1!=null){

                sum+=l1.val;
                l1=l1.next;
            }
            if(l2!=null){

                sum+=l2.val;
                l2=l2.next;
            }

            sum+=car;
            ListNode newNode=new ListNode(sum%10);

            car=sum/10;

            newNode.next=ans;
            ans=newNode;

        }

        return ans;

    }

    public ListNode rev(ListNode n){

        if(n==null){
            return null;
        }

        ListNode curr=n;
        ListNode prev=null;

        while(curr!=null){

            ListNode next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
}