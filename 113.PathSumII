/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {

        List<List<Integer>> list=new ArrayList<>();
        List<Integer> arr=new ArrayList<>();
        
        helper(root, targetSum, arr, list);
        return list;
    }

    public void helper(TreeNode root, int target, List<Integer> arr, List<List<Integer>> list){

        if(root==null){
            return;
        }
        arr.add(root.val);

        target-=root.val;


        if(root.left==null && root.right==null && target==0){
            list.add(new ArrayList<>(arr));
        }
        else{
            helper(root.left, target, arr, list);
            helper(root.right, target, arr, list);
        }
        
        arr.remove(arr.size()-1);
    }
}