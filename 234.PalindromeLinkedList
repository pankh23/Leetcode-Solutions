/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        
        if(head==null || head.next==null){
            return true;
        }

        ListNode fast=head, slow=head;

        while(fast!=null && fast.next!=null){

            slow=slow.next;
            fast=fast.next.next;
        }

        ListNode second=rev(slow);

        ListNode first=head;

        while(second!=null){

            if(first.val!=second.val){
                return false;
            }

            first=first.next;
            second=second.next;
        }

        return true;
    }

    public static ListNode rev(ListNode temp){

        ListNode curr=temp;
        ListNode prev=null;

        while(curr!=null){

            ListNode p=curr.next;
            curr.next=prev;
            prev=curr;
            curr=p;

        }

        return prev;
    }
}