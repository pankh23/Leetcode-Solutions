class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        
        List<Integer> sum=new ArrayList<>();
        List<List<Integer>> ans=new ArrayList<>();

        Arrays.sort(candidates);

        helper(candidates, 0, target, ans, sum);

        return ans;
    }

    public void helper(int arr[], int ind, int tar, List<List<Integer>> ans, List<Integer> sum){

        if(tar==0){
            ans.add(new ArrayList<>(sum));
            return;
        }

        for(int i=ind;i<arr.length;i++){

            if(i>ind && arr[i]==arr[i-1]){
                continue;
            }

            if(arr[i]>tar){
                break;
            }

            sum.add(arr[i]);
            helper(arr, i+1, tar-arr[i], ans, sum);
            sum.remove(sum.size()-1);
        }
    }
}