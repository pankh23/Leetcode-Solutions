class Solution {

    public static int find(int arr[]){

        int max=Integer.MIN_VALUE;

        for(int i=0;i<arr.length;i++){

            if(arr[i]>max){

                max=arr[i];
            }
        }

        return max;
    }

    public static boolean helper(int mid, int arr[], int m, int k){

        int count=0;
        int num=0;

        for(int i=0;i<arr.length;i++){

            if(arr[i]<=mid){

                count++;
            }
            else{
                count=0;
            }

            if(count==k){

                num++;
                count=0;
            }
        }

        return (num>=m);
    }
    public int minDays(int[] bloomDay, int m, int k) {
        
        int n=bloomDay.length;

        if((long) (m*k)>n){
            return -1;
        }

        int l=0;
        int r=find(bloomDay);
        int ans=-1;

        while(l<=r){

            int mid=(l+r)/2;
            
            if(helper(mid, bloomDay, m, k)){

                ans=mid;
                r=mid-1;
            }
            else{

                l=mid+1;
            }
        }

        return ans;
    }

    
}