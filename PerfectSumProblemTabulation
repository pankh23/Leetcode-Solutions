class Solution {
    // Function to calculate the number of subsets with a given sum
    public int perfectSum(int[] nums, int target) {
        // code here
        
        int[][] dp=new int[nums.length][target+1];
        
        dp[0][0] = (nums[0] == 0) ? 2 : 1;
        
        
        for(int i=1;i<nums.length;i++){
            
            dp[i][0]=dp[i-1][0];
        }
        
        if (nums[0] != 0 && nums[0] <= target) {
            dp[0][nums[0]] = 1;
        }
        
        for(int i=1;i<nums.length;i++){
            
            for(int j=0;j<=target;j++){
                
                int not=dp[i-1][j];
                
                int take=0;
                
                if(j>=nums[i]){
                    
                    take=dp[i-1][j-nums[i]];
                }
                dp[i][j]=not+take;
            }
        }
        return dp[nums.length-1][target];
    }
    
}